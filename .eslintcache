[{"C:\\githubbing\\saqibali.ca\\src\\index.js":"1","C:\\githubbing\\saqibali.ca\\src\\reportWebVitals.js":"2","C:\\githubbing\\saqibali.ca\\src\\App.js":"3","C:\\githubbing\\saqibali.ca\\src\\components\\slider.js":"4","C:\\githubbing\\saqibali.ca\\src\\components\\projects.js":"5","C:\\githubbing\\saqibali.ca\\src\\components\\footer.js":"6","C:\\githubbing\\saqibali.ca\\src\\components\\experience.js":"7","C:\\githubbing\\saqibali.ca\\src\\components\\navbar.js":"8","C:\\githubbing\\saqibali.ca\\src\\components\\sectionCard.js":"9","C:\\githubbing\\saqibali.ca\\src\\components\\helperComponents\\githubLink.js":"10","C:\\githubbing\\saqibali.ca\\src\\components\\helperComponents\\projectLink.js":"11"},{"size":517,"mtime":1630564911197,"results":"12","hashOfConfig":"13"},{"size":375,"mtime":1630564911199,"results":"14","hashOfConfig":"13"},{"size":792,"mtime":1630564911076,"results":"15","hashOfConfig":"13"},{"size":1216,"mtime":1630564911195,"results":"16","hashOfConfig":"13"},{"size":13298,"mtime":1631737359036,"results":"17","hashOfConfig":"13"},{"size":1503,"mtime":1630564911129,"results":"18","hashOfConfig":"13"},{"size":8533,"mtime":1631052415307,"results":"19","hashOfConfig":"13"},{"size":2047,"mtime":1630564911190,"results":"20","hashOfConfig":"13"},{"size":3060,"mtime":1630564911193,"results":"21","hashOfConfig":"13"},{"size":889,"mtime":1630564911131,"results":"22","hashOfConfig":"13"},{"size":655,"mtime":1630564911132,"results":"23","hashOfConfig":"13"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},"1wjzgah",{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"29","messages":"30","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"31","usedDeprecatedRules":"26"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"34","usedDeprecatedRules":"26"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"37","usedDeprecatedRules":"26"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"40","usedDeprecatedRules":"26"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"43","usedDeprecatedRules":"26"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"46","usedDeprecatedRules":"26"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"49","usedDeprecatedRules":"26"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"52","usedDeprecatedRules":"26"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"55","usedDeprecatedRules":"56"},"C:\\githubbing\\saqibali.ca\\src\\index.js",[],["57","58"],"C:\\githubbing\\saqibali.ca\\src\\reportWebVitals.js",[],"C:\\githubbing\\saqibali.ca\\src\\App.js",["59"],"import React, { useEffect, useState } from \"react\";\r\n\r\nimport Navbar from \"./components/navbar\";\r\nimport SectionCard from \"./components/sectionCard\";\r\nimport Experience from \"./components/experience\";\r\nimport Projects from \"./components/projects\";\r\nimport Slider from \"./components/slider\";\r\nimport Footer from \"./components/footer\";\r\nimport \"./App.css\";\r\nimport \"./scss/styles.scss\";\r\nimport AOS from \"aos\";\r\nimport \"aos/dist/aos.css\";\r\n\r\nfunction App() {\r\n  useEffect(() => {\r\n    AOS.init({\r\n      duration: 1000,\r\n      anchorPlacement: \"top-bottom\",\r\n    });\r\n  }, []);\r\n  return (\r\n    <div className=\"App\">\r\n      <Navbar />\r\n      <SectionCard />\r\n      <Slider />\r\n      <br />\r\n      <Experience />\r\n      <Projects />\r\n      <Footer />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","C:\\githubbing\\saqibali.ca\\src\\components\\slider.js",["60"],"import CPlusPlus from \"./images/CPlusPlus.svg\";\r\nimport Java from \"./images/java.svg\";\r\nimport JS from \"./images/JS.png\";\r\nimport Python from \"./images/python.png\";\r\nimport HTML from \"./images/html.png\";\r\nimport Css from \"./images/css.png\";\r\nimport React from \"./images/react.png\";\r\nimport Spring from \"./images/spring.png\";\r\n\r\nfunction Slider() {\r\n  const technolgies = [\r\n    { \"C++\": CPlusPlus },\r\n    { Java: Java },\r\n    { Spring: Spring },\r\n    { \"Java Script\": JS },\r\n    { Python: Python },\r\n    { Html: HTML },\r\n    { Sass: Css },\r\n    { React: React },\r\n  ];\r\n  return (\r\n    <div class=\"slider-container\">\r\n      <h2 class=\"slider-header\" data-aos=\"fade-up\">\r\n        Technologies\r\n        <hr />\r\n      </h2>\r\n      <div class=\"slider\">\r\n        {technolgies.map((technolgy, index) => {\r\n          return (\r\n            <div\r\n              class=\"slider-content\"\r\n              data-aos=\"zoom-out-up\"\r\n              data-aos-delay={index * 50}\r\n            >\r\n              <img src={Object.entries(technolgy)[0][1]} class=\"slider-img\" />\r\n              <h2>{Object.entries(technolgy)[0][0]}</h2>\r\n            </div>\r\n          );\r\n        })}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\nexport default Slider;\r\n","C:\\githubbing\\saqibali.ca\\src\\components\\projects.js",["61","62","63","64","65","66","67","68","69","70"],"import React, { useEffect, useState } from \"react\";\r\nimport ps5 from \"./files/ps5-project.mp4\";\r\nimport snake from \"./images/snake.png\";\r\nimport portfolio from \"./files/project-online.mp4\";\r\nimport qalculater from \"./files/qalculater.mp4\";\r\nimport FlappyBird from \"./images/flappyBird.jpg\";\r\nimport Sorting from \"./files/Sorting.mp4\";\r\n\r\nimport qalc from \"./files/qalculater.mp4\";\r\nimport laptop from \"./images/laptop.png\";\r\nimport phone from \"./images/smartphone.png\";\r\nimport \"react-responsive-carousel/lib/styles/carousel.min.css\"; // requires a loader\r\nimport { Carousel } from \"react-responsive-carousel\";\r\n\r\nimport { Grid1x2Fill } from \"react-bootstrap-icons\";\r\nimport ReactPlayer from \"react-player/file\";\r\nimport GithubLink from \"./helperComponents/githubLink\";\r\nimport ProjectLink from \"./helperComponents/projectLink\";\r\n\r\nconst getConfigurableProps = () => ({\r\n  showArrows: true,\r\n  showStatus: false,\r\n  showIndicators: true,\r\n  axis: \"horizontal\",\r\n  infiniteLoop: true,\r\n  showThumbs: false,\r\n  useKeyboardArrows: false,\r\n  autoPlay: false,\r\n  stopOnHover: true,\r\n  swipeable: true,\r\n  dynamicHeight: false,\r\n  emulateTouch: true,\r\n  thumbWidth: 200,\r\n  selectedItem: 0,\r\n  interval: 100000,\r\n  transitionTime: 300,\r\n  swipeScrollTolerance: 50,\r\n  preventMovementUntilSwipeScrollTolerance: true,\r\n});\r\nfunction Project() {\r\n  const projects = [\r\n    {\r\n      \"Sorting Visualizer\": [\r\n        Sorting,\r\n        <>\r\n          Developed a clean web interface to visualize the progress of some\r\n          famous sorting algorithms. Incorporated Merge Sort, Quick Sort and\r\n          Bubble Sort. Added sliders for the purposes of manipulating array size\r\n          and sorting speed.\r\n        </>,\r\n        \"Sorting-Visualizer\",\r\n        \"2021\",\r\n        false, // is mobile?\r\n        false, // is image?\r\n      ],\r\n    },\r\n    {\r\n      \"PS5 UI for Windows!\": [\r\n        ps5,\r\n        <>\r\n          Developed an interactive front-end which provides a clean interface to\r\n          launch games Implemented core functionality to launch, hide, sort,\r\n          remove games using <b>Python scripts</b> UI styling and interactivity\r\n          was implemented using Kodi Incorporated the Xinput api to report\r\n          information regarding controllers in UI The skin can be viewed here:\r\n          Play Station 5 Skin\r\n        </>,\r\n        \"Playstation-5-windows\",\r\n        \"2021\",\r\n        false,\r\n        false,\r\n      ],\r\n    },\r\n    {\r\n      Qalculater: [\r\n        qalculater,\r\n        <>\r\n          This app removes my reliance on sticky notes and efficiently tracks my\r\n          academic progress. UI Interactivity was implemented using the{\" \"}\r\n          <b>React framework</b> and styling using <b>SASS</b>. Implemented the\r\n          backend using ExpressJS. <b>Without app: </b>26s <b>With app: </b>9s\r\n          i.e. a time reduction of 65%.\r\n        </>,\r\n        \"Qalculater\",\r\n        \"2021\",\r\n        true,\r\n        false,\r\n      ],\r\n    },\r\n    {\r\n      \"Online Portfolio\": [\r\n        portfolio,\r\n        <>\r\n          I enjoy front-end development, creating good looking UI and UX. I\r\n          created this responsive website using <b>React</b> which introduces\r\n          me, my interests, projects, work experiences and much more!\r\n          <br />\r\n          <b>How it was: </b>{\" \"}\r\n          <a href=\"https://saqibfirstsite.netlify.app\">\r\n            saqibfirstsite.netlify.app\r\n          </a>\r\n          <br />\r\n          <b>How its going: </b> <a href=\"https://saqibali.ca\">saqibali.ca</a>\r\n        </>,\r\n        \"Online-Portfolio\",\r\n        \"2019 - 2021\",\r\n        false,\r\n        false,\r\n      ],\r\n    },\r\n    {\r\n      \"Snake Game\": [\r\n        snake,\r\n        <>\r\n          Built a clone of the classic addictive game: Snake. Implemented core\r\n          game logic and visuals using <b>C++</b>. Incorporated fundamental OOP\r\n          principles like\r\n          <i> Inheritance, </i>\r\n          <i>Abstraction, </i>\r\n          <i>Encapsulation </i>\r\n          to provide a clear modular structure\r\n        </>,\r\n        \"\",\r\n        \"2020\",\r\n        false,\r\n        true,\r\n      ],\r\n    },\r\n    {\r\n      \"Flappy Bird Android Game\": [\r\n        FlappyBird,\r\n        <>\r\n          Built a clone of the addictive side-scroller game: Flappy bird.\r\n          Implemented core game logic and sounds using Java, Android studio and\r\n          LibGdx. An infinite loop was implemented which would update the screen\r\n          every 16.66ms i.e. 60 fps and all logic such as collision detection\r\n          and scores were updated within this loop.\r\n        </>,\r\n        \"\",\r\n        \"2019\",\r\n        true,\r\n        true,\r\n      ],\r\n    },\r\n  ];\r\n  const links = {\r\n    \"Sorting Visualizer\": \"https://sort-app.netlify.app/\",\r\n    \"PS5 UI for Windows!\": \"https://youtu.be/SHyACovTXSE\",\r\n    Qalculater: \"https://qalculater.netlify.app/login\",\r\n    \"Snake Game\": \"\",\r\n    \"Online Portfolio\": \"https://saqibali.ca\",\r\n  };\r\n  const [repo, setRepos] = useState([]);\r\n  const [gridView, setView] = useState(false);\r\n  useEffect(() => {\r\n    fetch(\"https://api.github.com/users/SaqibA1i/repos\")\r\n      .then((response) => {\r\n        response.json().then((data) => {\r\n          let repositories = [];\r\n          // push the visible / existing repos to\r\n          data.map((entry) => {\r\n            repositories.push(entry[\"name\"]);\r\n          });\r\n          setRepos([...repositories]);\r\n        });\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n      });\r\n  }, []);\r\n  return (\r\n    <div\r\n      id=\"four\"\r\n      class=\"project-section back\"\r\n      style={{ \"background-color\": \"transparent\" }}\r\n    >\r\n      <h2\r\n        data-aos=\"fade-up\"\r\n        class=\"slider-header\"\r\n        style={{ \"background-color\": \"transparent\" }}\r\n      >\r\n        Projects{\" \"}\r\n        <button\r\n          class=\"header-btn\"\r\n          onClick={() => {\r\n            setView(!gridView);\r\n            if (gridView) {\r\n              document.getElementById(\"projects\").style.maxWidth = \"1200px\";\r\n            } else {\r\n              document.getElementById(\"projects\").style.maxWidth = \"100%\";\r\n            }\r\n          }}\r\n        >\r\n          <Grid1x2Fill size={20} color={\"#c50000\"} />\r\n        </button>\r\n        <hr />\r\n      </h2>\r\n      <div class=\"projects\" id=\"projects\">\r\n        {!gridView && (\r\n          <div class=\"all-companies\">\r\n            {projects.map((project, index) => {\r\n              return (\r\n                <div\r\n                  id={\"company-container-\" + index}\r\n                  class=\"company-container\"\r\n                  style={{\r\n                    width: \"auto\",\r\n                    height: \"0px\",\r\n                    backgroundColor: \"tansparent\",\r\n                    color: \"#333\",\r\n                  }}\r\n                  onClick={() => {\r\n                    document\r\n                      .getElementsByClassName(\"control-dots\")[1]\r\n                      .getElementsByClassName(\"dot\")\r\n                      [index].click();\r\n                  }}\r\n                >\r\n                  <a class=\"main-btn\" style={{ fontSize: \"10px\" }}>\r\n                    <p class=\"center\">{Object.entries(project)[0][0]}</p>\r\n                  </a>\r\n                </div>\r\n              );\r\n            })}\r\n          </div>\r\n        )}\r\n        {!gridView ? (\r\n          <Carousel width=\"inherit\" {...getConfigurableProps()}>\r\n            {projects.map((project) => {\r\n              return (\r\n                <>\r\n                  <div class=\"single\" style={{ paddingTop: \"0px\" }}>\r\n                    {!Object.entries(project)[0][1][4] ? (\r\n                      <div class=\"player\" data-aos=\"fade-right\">\r\n                        <img src={laptop} />\r\n                        <div class=\"hello\">\r\n                          {Object.entries(project)[0][1][5] ? (\r\n                            <img src={Object.entries(project)[0][1][0]} />\r\n                          ) : (\r\n                            <ReactPlayer\r\n                              id=\"player\"\r\n                              width=\"-webkit-fill-available\"\r\n                              height=\"fit-content\"\r\n                              loop={true}\r\n                              playing={true}\r\n                              url={Object.entries(project)[0][1][0]}\r\n                              muted={true}\r\n                            />\r\n                          )}\r\n                        </div>\r\n                      </div>\r\n                    ) : (\r\n                      <div class=\"player\" data-aos=\"fade-right\">\r\n                        <img src={phone} class=\"phone\" />\r\n                        <div class=\"hello2\">\r\n                          {Object.entries(project)[0][1][5] ? (\r\n                            <img src={Object.entries(project)[0][1][0]} />\r\n                          ) : (\r\n                            <ReactPlayer\r\n                              id=\"player\"\r\n                              width=\"fit-content\"\r\n                              height=\"fit-content\"\r\n                              loop={true}\r\n                              playing={true}\r\n                              url={qalc}\r\n                              muted={true}\r\n                            />\r\n                          )}\r\n                        </div>\r\n                      </div>\r\n                    )}\r\n\r\n                    <div class=\"project-info\">\r\n                      <h3 data-aos=\"fade-left\">\r\n                        {Object.entries(project)[0][0]}\r\n                        <b class=\"project-tag\">\r\n                          {Object.entries(project)[0][1][3]}\r\n                        </b>\r\n                      </h3>\r\n                      <br />\r\n                      <p data-aos=\"fade-left\">\r\n                        {Object.entries(project)[0][1][1]}\r\n                      </p>\r\n                      <div class=\"links\">\r\n                        <GithubLink project={project} repo={repo} />\r\n                        <ProjectLink\r\n                          link={links}\r\n                          projectName={Object.entries(project)[0][0]}\r\n                        />\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                </>\r\n              );\r\n            })}\r\n          </Carousel>\r\n        ) : (\r\n          <div class=\"gridView\">\r\n            {projects.map((project) => {\r\n              return (\r\n                <>\r\n                  <div class=\"single\" style={{ paddingTop: \"0px\" }}>\r\n                    {!Object.entries(project)[0][1][4] ? (\r\n                      <div class=\"player\" data-aos=\"fade-right\">\r\n                        <img src={laptop} />\r\n                        <div class=\"hello\">\r\n                          {Object.entries(project)[0][1][5] ? (\r\n                            <img src={Object.entries(project)[0][1][0]} />\r\n                          ) : (\r\n                            <ReactPlayer\r\n                              id=\"player\"\r\n                              width=\"-webkit-fill-available\"\r\n                              height=\"fit-content\"\r\n                              loop={true}\r\n                              playing={true}\r\n                              url={Object.entries(project)[0][1][0]}\r\n                              muted={true}\r\n                            />\r\n                          )}\r\n                        </div>\r\n                      </div>\r\n                    ) : (\r\n                      <div class=\"player\" data-aos=\"fade-right\">\r\n                        <img src={phone} class=\"phone\" />\r\n                        <div class=\"hello2\">\r\n                          {Object.entries(project)[0][1][5] ? (\r\n                            <img src={Object.entries(project)[0][1][0]} />\r\n                          ) : (\r\n                            <ReactPlayer\r\n                              id=\"player\"\r\n                              width=\"fit-content\"\r\n                              height=\"fit-content\"\r\n                              loop={true}\r\n                              playing={true}\r\n                              url={qalc}\r\n                              muted={true}\r\n                            />\r\n                          )}\r\n                        </div>\r\n                      </div>\r\n                    )}\r\n\r\n                    <div class=\"project-info\">\r\n                      <h3 data-aos=\"fade-left\">\r\n                        {Object.entries(project)[0][0]}\r\n                        <b class=\"project-tag\">\r\n                          {Object.entries(project)[0][1][3]}\r\n                        </b>\r\n                      </h3>\r\n                      <br />\r\n                      <p data-aos=\"fade-left\">\r\n                        {Object.entries(project)[0][1][1]}\r\n                      </p>\r\n                      <div class=\"links\">\r\n                        <GithubLink project={project} repo={repo} />\r\n                        <ProjectLink\r\n                          link={links}\r\n                          projectName={Object.entries(project)[0][0]}\r\n                        />\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                </>\r\n              );\r\n            })}\r\n          </div>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Project;\r\n","C:\\githubbing\\saqibali.ca\\src\\components\\footer.js",["71","72","73"],"import React, { useEffect, useState } from \"react\";\r\nimport { Youtube, Github, Linkedin } from \"react-bootstrap-icons\";\r\nimport footer from \"./images/footer.png\";\r\nimport bubble from \"./images/bubble.png\";\r\n\r\nfunction Footer() {\r\n  useEffect(() => {}, []);\r\n\r\n  return (\r\n    <>\r\n      <div class=\"footer\">\r\n        <div class=\"footer-content\">\r\n          <div class=\"footer-icons\">\r\n            <Youtube\r\n              onClick={() => {\r\n                window.location.href =\r\n                  \"https://www.youtube.com/channel/UChbV48W0We8mOFe50MJeKIQ\";\r\n              }}\r\n              class=\"footer-icon\"\r\n              size={30}\r\n              color={\"white\"}\r\n            />\r\n            <Github\r\n              onClick={() => {\r\n                window.location.href =\r\n                  \"https://github.com/SaqibA1i?tab=repositories\";\r\n              }}\r\n              class=\"footer-icon\"\r\n              size={30}\r\n              color={\"white\"}\r\n            />\r\n            <Linkedin\r\n              onClick={() => {\r\n                window.location.href =\r\n                  \"https://www.linkedin.com/in/saqib-ali-25b2aa213/\";\r\n              }}\r\n              class=\"footer-icon\"\r\n              size={30}\r\n              color={\"white\"}\r\n            />\r\n          </div>\r\n          <a href=\"mailto:saqibalip321@gmail.com\">Lets talk!</a>\r\n          <div class=\"footer-bottom\">\r\n            <p>Saqib Ali</p>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default Footer;\r\n","C:\\githubbing\\saqibali.ca\\src\\components\\experience.js",["74","75","76","77","78","79","80"],"import React, { useEffect, useState } from \"react\";\r\nimport { ArrowBarLeft, ArrowBarRight, Calendar2 } from \"react-bootstrap-icons\";\r\nimport opentext from \"./images/opentext.png\";\r\nimport wework from \"./images/WeWork.png\";\r\nimport cgi from \"./images/cgi.png\";\r\nimport wave4 from \"./images/wave4.svg\";\r\nimport \"react-responsive-carousel/lib/styles/carousel.min.css\"; // requires a loader\r\nimport { Carousel } from \"react-responsive-carousel\";\r\n\r\nimport bg from \"./images/body-wave2.png\";\r\nconst getConfigurableProps = () => ({\r\n  showArrows: true,\r\n  showStatus: false,\r\n  showIndicators: true,\r\n  axis: \"horizontal\",\r\n  infiniteLoop: true,\r\n  showThumbs: false,\r\n  useKeyboardArrows: false,\r\n  autoPlay: false,\r\n  stopOnHover: true,\r\n  swipeable: true,\r\n  dynamicHeight: false,\r\n  emulateTouch: true,\r\n  thumbWidth: 200,\r\n  selectedItem: 0,\r\n  interval: 100000,\r\n  transitionTime: 300,\r\n  swipeScrollTolerance: 50,\r\n  preventMovementUntilSwipeScrollTolerance: true,\r\n});\r\n\r\nfunction Experience() {\r\n  const experiences = [\r\n    {\r\n      CGI: [\r\n        cgi,\r\n        <>Developer</>,\r\n        <>May 2021 - August 2021</>,\r\n        <>\r\n          <li>\r\n            <span>\r\n              Spearheaded the research and integration of the Deck tool in a\r\n              Jenkins CICD pipeline to streamline and secure changes made to the{\" \"}\r\n              <em>Kong Api Gateway</em>.\r\n            </span>\r\n          </li>\r\n          <li>\r\n            <span>\r\n              Developed <em>python scripts</em> to automate the warehousing of\r\n              EFK logs.\r\n            </span>\r\n          </li>\r\n          <li>\r\n            <span>\r\n              Leveraged knowledge in <em>Java</em>, <em>Springboot</em> to add\r\n              user context to a web application by using interceptors and\r\n              deploying the app via <em>Docker</em>. The app was accessed\r\n              through a reverse proxy integrated with the Keycloack IDP.\r\n            </span>\r\n          </li>\r\n          <li>\r\n            <span>\r\n              Created a <em>ExpressJS</em> application that scrapes metrics from\r\n              the Keycloack IDP and outputs a 200 / 500 http response based on\r\n              custom health checks\r\n            </span>\r\n          </li>\r\n        </>,\r\n      ],\r\n    },\r\n    {\r\n      \"Open Text\": [\r\n        opentext,\r\n        <>Software Developer</>,\r\n        <>Sept 2020 - Dec 2020</>,\r\n        <>\r\n          <li>\r\n            <span>\r\n              Co-developed a responsive website to showcase proprietary company\r\n              icons and optimize the UXD team’s workflow\r\n            </span>\r\n          </li>\r\n          <li>\r\n            <span>\r\n              Lead the development of an admin screen to upload, delete and edit\r\n              icons utilizing <em>React</em>, <em>Java</em> and{\" \"}\r\n              <em>Spring boot</em>\r\n            </span>\r\n          </li>\r\n          <li>\r\n            <span>\r\n              Structured the backend of the admin site using <em>Java</em> and{\" \"}\r\n              <em>Spring boot</em> to interact with Gitlab’s api to store the\r\n              icons\r\n            </span>\r\n          </li>\r\n          <li>\r\n            <span>\r\n              Implemented build automation using <em>Team City</em> to run\r\n              scripts for further manipulation of icons as part of <em>CICD</em>\r\n              . Icons were pushed to artifactory and published as an npm package\r\n              to provide programmatic access\r\n            </span>\r\n          </li>\r\n          <li>\r\n            <span>\r\n              Developed a CSS library following company’s design principles\r\n              using <em>SASS</em>. A static website was developed using React to\r\n              showcase the developed components which were WCAG compliant\r\n            </span>\r\n          </li>\r\n          <li>\r\n            <span>\r\n              Integrated react-date-picker with company’s case management\r\n              front-end and wrote unit tests using <em>Enzyme</em>\r\n            </span>\r\n          </li>\r\n        </>,\r\n      ],\r\n    },\r\n    {\r\n      \"We Work\": [\r\n        wework,\r\n        <>Software Engineering Intern</>,\r\n        <>Jan 2020 - April 2020</>,\r\n        <>\r\n          <li>\r\n            <span>\r\n              Identified, documented and reported bugs along with other issues\r\n              within the software database of Propaganda Gold. This required\r\n              quickly getting familiar with new technologies such as{\" \"}\r\n              <em>Git</em>, <em>Amazon Web Services</em>, <em>Vue</em>,{\" \"}\r\n              <em>Node JS</em>, <em>CLI</em>\r\n            </span>\r\n          </li>\r\n          <li>\r\n            <span>\r\n              Took initiative to develop a <em>Restful API</em> demo for the\r\n              purpose of uploading user profile pictures. User's information on\r\n              a back-end created using Node and <em>MongoDB</em> with the front\r\n              end being Vue.\r\n            </span>\r\n          </li>\r\n          <li>\r\n            <span>\r\n              The successful completion of the user demo allowed me to upload\r\n              videos and images for user posts which was greatly appreciated by\r\n              the team.\r\n            </span>\r\n          </li>\r\n          <li>\r\n            <span>\r\n              Demonstrated responsibility and initiative to develop the front\r\n              end of the social media app along with the lead engineer. This\r\n              involved coding the front end in Vue and understanding the backend\r\n              in <em>JS</em> and <em>C++</em>.\r\n            </span>\r\n          </li>\r\n          <li>\r\n            <span>\r\n              I was able to port over the front end web application demo from\r\n              Angular to Vue in order to meet project needs. This was greatly\r\n              appreciated and acknowledged by the team.\r\n            </span>\r\n          </li>\r\n        </>,\r\n      ],\r\n    },\r\n  ];\r\n  useEffect(() => {}, []);\r\n  return (\r\n    <div style={{ overflow: \"hidden\" }}>\r\n      <img src={wave4} class=\"top-wave\" />\r\n      <div id=\"three\" class=\"project-section\">\r\n        <h2 class=\"slider-header\" data-aos=\"fade-up\">\r\n          Experience\r\n          <hr />\r\n        </h2>\r\n        {\r\n          // Making a section with over view of all companies\r\n        }\r\n        <div class=\"all-companies\">\r\n          {experiences.map((project, index) => {\r\n            return (\r\n              <div\r\n                id={\"company-container-\" + index}\r\n                class=\"company-container\"\r\n                style={{ width: \"100px\" }}\r\n                onClick={() => {\r\n                  document\r\n                    .getElementsByClassName(\"control-dots\")[0]\r\n                    .getElementsByClassName(\"dot\")\r\n                    [index].click();\r\n                }}\r\n              >\r\n                <img\r\n                  class=\"company\"\r\n                  src={Object.entries(project)[0][1][0]}\r\n                  data-aos=\"zoom-in\"\r\n                  data-aos-delay={index * 100}\r\n                />\r\n              </div>\r\n            );\r\n          })}\r\n        </div>\r\n        <div\r\n          class=\"projects\"\r\n          style={{ \"max-width\": \"1200px\", margin: \"0 auto\" }}\r\n        >\r\n          <Carousel width=\"inherit\" {...getConfigurableProps()}>\r\n            {experiences.map((project) => {\r\n              return (\r\n                <>\r\n                  <div class=\"single\">\r\n                    <div class=\"left\">\r\n                      <img\r\n                        class=\"first\"\r\n                        src={Object.entries(project)[0][1][0]}\r\n                        data-aos=\"fade-right\"\r\n                      />\r\n                      <h3 data-aos=\"fade-right\" data-aos-delay=\"60\">\r\n                        {Object.entries(project)[0][1][1]}\r\n                        <h5 data-aos-delay=\"120\">\r\n                          <Calendar2 />{\" \"}\r\n                          <i>{Object.entries(project)[0][1][2]}</i>\r\n                        </h5>\r\n                      </h3>\r\n                    </div>\r\n                    <div\r\n                      data-aos=\"fade-left\"\r\n                      class=\"project-info project-info-greater\"\r\n                      style={{ paddingTop: \"0px\" }}\r\n                    >\r\n                      <ul>{Object.entries(project)[0][1][3]}</ul>\r\n                    </div>\r\n                  </div>\r\n                </>\r\n              );\r\n            })}\r\n          </Carousel>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Experience;\r\n","C:\\githubbing\\saqibali.ca\\src\\components\\navbar.js",["81","82","83","84","85","86","87","88"],"import React, { useEffect, useState } from \"react\";\r\n\r\nimport {\r\n  HouseDoorFill,\r\n  PersonBadge,\r\n  BriefcaseFill,\r\n  BookFill,\r\n  Mailbox,\r\n  Mailbox2,\r\n} from \"react-bootstrap-icons\";\r\nfunction Navbar() {\r\n  // THE MOVING EYE\r\n  // document.addEventListener(\"mousemove\", (event) => {\r\n  //   let x = event.clientX;\r\n  //   let y = event.clientY;\r\n  //   const tgt = event.target;\r\n  //   const computed = window.getComputedStyle(tgt)[\"cursor\"];\r\n  //   if (computed == \"pointer\") {\r\n  //     document.getElementById(\"eye-pupil\").style.width = \"11px\";\r\n  //     document.getElementById(\"eye-pupil\").style.height = \"11px\";\r\n  //     document.getElementById(\"nav-eye\").style.height = \"35px\";\r\n  //     document.getElementById(\"nav-eye\").style.animation = \"none\";\r\n  //   } else {\r\n  //     document.getElementById(\"eye-pupil\").style.width = \"7px\";\r\n  //     document.getElementById(\"eye-pupil\").style.height = \"7px\";\r\n\r\n  //     document.getElementById(\"nav-eye\").style.animation =\r\n  //       \"eye 2s infinite alternate-reverse\";\r\n  //   }\r\n  //   // get viewport width\r\n  //   document.getElementById(\"eye-pupil\").style.left =\r\n  //     (30 * x) / window.innerWidth + \"px\";\r\n\r\n  //   // get viewport height\r\n  //   document.getElementById(\"eye-pupil\").style.top =\r\n  //     (20 * y) / window.innerHeight + \"px\";\r\n  // });\r\n  return (\r\n    <nav id=\"navbar\" class=\"trans\">\r\n      <div class=\"nav-left\">SA</div>\r\n      {/* <div id=\"nav-eye\" class=\"nav-eye\">\r\n        <div id=\"eye-pupil\" class=\"eye-pupil\"></div>\r\n      </div> */}\r\n      <ul class=\"nav-right\">\r\n        <a href=\"#two\">\r\n          <li data-aos=\"fade-down\">\r\n            <span>About</span>\r\n          </li>\r\n        </a>\r\n        <a href=\"#three\">\r\n          <li data-aos=\"fade-down\" data-aos-delay=\"50\">\r\n            <span>Experience</span>\r\n          </li>\r\n        </a>\r\n        <a href=\"#four\">\r\n          <li data-aos=\"fade-down\" data-aos-delay=\"100\">\r\n            <span>Projects</span>\r\n          </li>\r\n        </a>\r\n      </ul>\r\n    </nav>\r\n  );\r\n}\r\n\r\nexport default Navbar;\r\n","C:\\githubbing\\saqibali.ca\\src\\components\\sectionCard.js",["89","90","91","92","93","94"],"import Icon from \"./images/profile.jpg\";\r\nimport bg from \"./images/body-wave2.png\";\r\nimport resume from \"./files/Resume 2A.docx.pdf\";\r\nimport React, { useEffect } from \"react\";\r\n\r\nfunction SectionCard() {\r\n  const Jobs = [\"Frontend Developer\", \"Backend Developer\", \"DevOps Developer\"];\r\n  useEffect(() => {\r\n    document\r\n      .getElementById(\"dev\")\r\n      .addEventListener(\"animationiteration\", () => {\r\n        let element = document.getElementById(\"dev\");\r\n        let job = element.innerText;\r\n        let index = (Jobs.indexOf(job) + 1) % Jobs.length;\r\n        document.getElementById(\"dev\").innerText = Jobs[index];\r\n      });\r\n    window.addEventListener(\"scroll\", () => {\r\n      if (window.scrollY < 50) {\r\n        document.getElementById(\"navbar\").className = \"trans\";\r\n      } else if (window.scrollY > 50) {\r\n        document.getElementById(\"navbar\").className = \"nav-scrolling\";\r\n      }\r\n    });\r\n  }, []);\r\n\r\n  return (\r\n    <>\r\n      <div class=\"main\">\r\n        <img data-aos=\"zoom-out-up\" style={{ \"z-index\": \"1300\" }} src={Icon} />\r\n        <div id=\"two\" class=\"main-img\">\r\n          <img\r\n            id=\"image1\"\r\n            class=\"top-img\"\r\n            src={bg}\r\n            style={{\r\n              \"max-width\": \"200%\",\r\n              width: \"200%\",\r\n              position: \"absolute\",\r\n              top: 0,\r\n              transform: \"rotate(0)\",\r\n            }}\r\n          />\r\n          <img\r\n            id=\"image2\"\r\n            class=\"bottom-img\"\r\n            src={bg}\r\n            style={{\r\n              \"max-width\": \"200%\",\r\n              width: \"200%\",\r\n              position: \"absolute\",\r\n              bottom: 0,\r\n            }}\r\n          />\r\n          <img\r\n            id=\"image3\"\r\n            class=\"bottom-img\"\r\n            src={bg}\r\n            style={{\r\n              \"max-width\": \"200%\",\r\n              width: \"200%\",\r\n              position: \"absolute\",\r\n              bottom: 0,\r\n            }}\r\n          />\r\n          <h1 data-aos=\"fade-down\">\r\n            SAQIB ALI\r\n            <br />\r\n            <p class=\"aspire\" data-aos=\"fade-down\">\r\n              <div id=\"dev\">{Jobs[0]}</div>\r\n            </p>\r\n          </h1>\r\n          <p data-aos=\"fade-down\">\r\n            A student of computer engineering with a strong passion for software\r\n            development and solid industry experience. If you are looking to\r\n            hire, please contact me here:\r\n          </p>\r\n          <div class=\"section-container-btns\">\r\n            <div data-aos=\"zoom-in-right\">\r\n              <a href=\"mailto:saqibalip321@gmail.com\" class=\"mail\">\r\n                Email Me\r\n              </a>\r\n            </div>\r\n            <div data-aos=\"zoom-in-left\">\r\n              <a\r\n                class=\"resume\"\r\n                href={resume}\r\n                type=\"application/pdf\"\r\n                target=\"_blank\"\r\n              >\r\n                Resume\r\n              </a>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div id=\"bottom-oval\"></div>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default SectionCard;\r\n","C:\\githubbing\\saqibali.ca\\src\\components\\helperComponents\\githubLink.js",["95","96"],"import { Github, CaretRightFill, Controller } from \"react-bootstrap-icons\";\r\n\r\nfunction GithubLink({ project, repo }) {\r\n  return (\r\n    <div class=\"project-btns\" data-aos=\"zoom-in-up\">\r\n      <a\r\n        href={\r\n          !repo.includes(Object.entries(project)[0][1][2])\r\n            ? \"javascript:void(0)\"\r\n            : \"https://github.com/SaqibA1i/\" + Object.entries(project)[0][1][2]\r\n        }\r\n        class={\r\n          !repo.includes(Object.entries(project)[0][1][2])\r\n            ? \"disabled main-btn\"\r\n            : \"main-btn\"\r\n        }\r\n      >\r\n        <Github\r\n          style={{\r\n            \"padding-right\": \"10px\",\r\n          }}\r\n          size={30}\r\n        />\r\n        Github\r\n        <CaretRightFill\r\n          style={{ \"padding-left\": \"10px\" }}\r\n          class=\"arrow\"\r\n          size={25}\r\n        />\r\n      </a>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default GithubLink;\r\n","C:\\githubbing\\saqibali.ca\\src\\components\\helperComponents\\projectLink.js",["97"],"import { Globe, CaretRightFill, Controller } from \"react-bootstrap-icons\";\r\n\r\nfunction ProjectLink({ link, projectName }) {\r\n  return (\r\n    <div class=\"project-btns\" data-aos=\"zoom-in-up\">\r\n      {link[projectName] && (\r\n        <a href={link[projectName]} class=\"main-btn main-link-btn\">\r\n          <Globe\r\n            style={{\r\n              \"padding-right\": \"10px\",\r\n            }}\r\n            size={30}\r\n          />\r\n          Link\r\n          <CaretRightFill\r\n            style={{ \"padding-left\": \"10px\" }}\r\n            class=\"arrow\"\r\n            size={25}\r\n          />\r\n        </a>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ProjectLink;\r\n",["98","99"],{"ruleId":"100","replacedBy":"101"},{"ruleId":"102","replacedBy":"103"},{"ruleId":"104","severity":1,"message":"105","line":1,"column":28,"nodeType":"106","messageId":"107","endLine":1,"endColumn":36},{"ruleId":"108","severity":1,"message":"109","line":35,"column":15,"nodeType":"110","endLine":35,"endColumn":79},{"ruleId":"111","severity":1,"message":"112","line":161,"column":28,"nodeType":"113","messageId":"114","endLine":161,"endColumn":30},{"ruleId":"115","severity":1,"message":"116","line":219,"column":19,"nodeType":"110","endLine":219,"endColumn":68},{"ruleId":"108","severity":1,"message":"109","line":235,"column":25,"nodeType":"110","endLine":235,"endColumn":45},{"ruleId":"108","severity":1,"message":"109","line":238,"column":29,"nodeType":"110","endLine":238,"endColumn":75},{"ruleId":"108","severity":1,"message":"109","line":254,"column":25,"nodeType":"110","endLine":254,"endColumn":58},{"ruleId":"108","severity":1,"message":"109","line":257,"column":29,"nodeType":"110","endLine":257,"endColumn":75},{"ruleId":"108","severity":1,"message":"109","line":305,"column":25,"nodeType":"110","endLine":305,"endColumn":45},{"ruleId":"108","severity":1,"message":"109","line":308,"column":29,"nodeType":"110","endLine":308,"endColumn":75},{"ruleId":"108","severity":1,"message":"109","line":324,"column":25,"nodeType":"110","endLine":324,"endColumn":58},{"ruleId":"108","severity":1,"message":"109","line":327,"column":29,"nodeType":"110","endLine":327,"endColumn":75},{"ruleId":"104","severity":1,"message":"105","line":1,"column":28,"nodeType":"106","messageId":"107","endLine":1,"endColumn":36},{"ruleId":"104","severity":1,"message":"117","line":3,"column":8,"nodeType":"106","messageId":"107","endLine":3,"endColumn":14},{"ruleId":"104","severity":1,"message":"118","line":4,"column":8,"nodeType":"106","messageId":"107","endLine":4,"endColumn":14},{"ruleId":"104","severity":1,"message":"105","line":1,"column":28,"nodeType":"106","messageId":"107","endLine":1,"endColumn":36},{"ruleId":"104","severity":1,"message":"119","line":2,"column":10,"nodeType":"106","messageId":"107","endLine":2,"endColumn":22},{"ruleId":"104","severity":1,"message":"120","line":2,"column":24,"nodeType":"106","messageId":"107","endLine":2,"endColumn":37},{"ruleId":"104","severity":1,"message":"121","line":10,"column":8,"nodeType":"106","messageId":"107","endLine":10,"endColumn":10},{"ruleId":"108","severity":1,"message":"109","line":173,"column":7,"nodeType":"110","endLine":173,"endColumn":43},{"ruleId":"108","severity":1,"message":"109","line":196,"column":17,"nodeType":"110","endLine":201,"endColumn":19},{"ruleId":"108","severity":1,"message":"109","line":216,"column":23,"nodeType":"110","endLine":220,"endColumn":25},{"ruleId":"104","severity":1,"message":"122","line":1,"column":17,"nodeType":"106","messageId":"107","endLine":1,"endColumn":26},{"ruleId":"104","severity":1,"message":"105","line":1,"column":28,"nodeType":"106","messageId":"107","endLine":1,"endColumn":36},{"ruleId":"104","severity":1,"message":"123","line":4,"column":3,"nodeType":"106","messageId":"107","endLine":4,"endColumn":16},{"ruleId":"104","severity":1,"message":"124","line":5,"column":3,"nodeType":"106","messageId":"107","endLine":5,"endColumn":14},{"ruleId":"104","severity":1,"message":"125","line":6,"column":3,"nodeType":"106","messageId":"107","endLine":6,"endColumn":16},{"ruleId":"104","severity":1,"message":"126","line":7,"column":3,"nodeType":"106","messageId":"107","endLine":7,"endColumn":11},{"ruleId":"104","severity":1,"message":"127","line":8,"column":3,"nodeType":"106","messageId":"107","endLine":8,"endColumn":10},{"ruleId":"104","severity":1,"message":"128","line":9,"column":3,"nodeType":"106","messageId":"107","endLine":9,"endColumn":11},{"ruleId":"129","severity":1,"message":"130","line":24,"column":6,"nodeType":"131","endLine":24,"endColumn":8,"suggestions":"132"},{"ruleId":"108","severity":1,"message":"109","line":29,"column":9,"nodeType":"110","endLine":29,"endColumn":80},{"ruleId":"108","severity":1,"message":"109","line":31,"column":11,"nodeType":"110","endLine":42,"endColumn":13},{"ruleId":"108","severity":1,"message":"109","line":43,"column":11,"nodeType":"110","endLine":53,"endColumn":13},{"ruleId":"108","severity":1,"message":"109","line":54,"column":11,"nodeType":"110","endLine":64,"endColumn":13},{"ruleId":"133","severity":1,"message":"134","line":84,"column":15,"nodeType":"110","endLine":89,"endColumn":16},{"ruleId":"104","severity":1,"message":"135","line":1,"column":34,"nodeType":"106","messageId":"107","endLine":1,"endColumn":44},{"ruleId":"136","severity":1,"message":"137","line":9,"column":15,"nodeType":"138","messageId":"139","endLine":9,"endColumn":35},{"ruleId":"104","severity":1,"message":"135","line":1,"column":33,"nodeType":"106","messageId":"107","endLine":1,"endColumn":43},{"ruleId":"100","replacedBy":"140"},{"ruleId":"102","replacedBy":"141"},"no-native-reassign",["142"],"no-negated-in-lhs",["143"],"no-unused-vars","'useState' is defined but never used.","Identifier","unusedVar","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","'footer' is defined but never used.","'bubble' is defined but never used.","'ArrowBarLeft' is defined but never used.","'ArrowBarRight' is defined but never used.","'bg' is defined but never used.","'useEffect' is defined but never used.","'HouseDoorFill' is defined but never used.","'PersonBadge' is defined but never used.","'BriefcaseFill' is defined but never used.","'BookFill' is defined but never used.","'Mailbox' is defined but never used.","'Mailbox2' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'Jobs'. Either include it or remove the dependency array.","ArrayExpression",["144"],"react/jsx-no-target-blank","Using target=\"_blank\" without rel=\"noreferrer\" is a security risk: see https://html.spec.whatwg.org/multipage/links.html#link-type-noopener","'Controller' is defined but never used.","no-script-url","Script URL is a form of eval.","Literal","unexpectedScriptURL",["142"],["143"],"no-global-assign","no-unsafe-negation",{"desc":"145","fix":"146"},"Update the dependencies array to be: [Jobs]",{"range":"147","text":"148"},[917,919],"[Jobs]"]